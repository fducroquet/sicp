(define (make-semaphore n)
  (let ((mutex (make-mutex))
        (left n))
    (define (acquire)
      (mutex 'acquire)
      (if (> left 0)
        (begin
          (set! left (- left 1))
          (mutex 'release))
        (begin
          (mutex 'release)
          (acquire))))
    (define (release)
      (mutex 'acquire)
      (if (< left n)
        (set! left (+ left 1)))
      (mutex 'release))
    (define (the-semaphor m)
      (cond ((eq? m 'acquire)
             (acquire))
            ((eq? m 'release)
             (release))))
    the-semaphor))
