(run-in-interpreter
  '(define (xor a b)
     (or (and a (not b))
         (and (not a) b)))

  '(define (liars)
     (let ((ethel (amb 1 2 3 4 5))
           (joan (amb 1 2 3 4 5)))
       (require (xor (= ethel 1) (= joan 2)))
       (require (xor (= joan 3) (= ethel 5)))
       (let ((betty (amb 1 2 3 4 5))
             (kitty (amb 1 2 3 4 5)))
         (require (xor (= kitty 2) (= betty 3)))
         (let ((mary (amb 1 2 3 4 5)))
           (require (xor (= kitty 2) (= mary 4)))
           (require (xor (= mary 4) (= betty 1)))
           (require (distinct? (list betty ethel joan kitty mary)))
           (list (list 'Betty betty)
                 (list 'Ethel ethel)
                 (list 'Joan joan)
                 (list 'Kitty kitty)
                 (list 'Mary mary)))))))
